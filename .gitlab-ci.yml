image: claudioandre/control-center:job-445.6
stages:
  - build
  - test
  - delivery

##
# Stage: Build
#
# Checks if GNOME Control Center is properly building and installing. This is the
# most important stage of the CI, and no MR should ever be merged if it breaks
# any of them.
##
build:
  stage: build
  artifacts:
    name: builded
    untracked: true
    expire_in: 3h30min

  script:
    - echo "== Building =="
    - meson . _build
    - ninja -C _build

    - echo "== Installing =="
    - ninja -C _build install
  when: manual

##
# Stage: Test
#
# Runs the unit tests.
##
test:
  stage: test
  dependencies:
    - build

  script:
    - |
      if [[ -n "${CI_COMMIT_TAG}" ]]; then
        echo "== Distro Test =="
        meson test -C _build
        ninja dist -C _build
      else
        echo "== Testing =="
        meson test -C _build --verbose --no-stdsplit
      fi
  when: manual

##
# Stage: Delivery
#
# Create a flatpak
##
packaging:
  stage: delivery
  image: registry.gitlab.gnome.org/gnome/gnome-nightly-oci/nightly:master
  variables:
    CODECHECK: "FLATPAK"
    APPID: "org.gnome.SettingsDevel"
    BUNDLE: "org.gnome.SettingsDevel.flatpak"
    MANIFEST_PATH: "org.gnome.SettingsDevel.json"
    RUNTIME_REPO: "https://sdk.gnome.org/gnome-nightly.flatpakrepo"

  script:
    - echo "== Flatpak packaging =="

    # Move the manifest file to the root folder
    - cp tests/*.json .

    # Ajust manifest
    - sed -i "s,<<ID>>,$APPID,g" ${MANIFEST_PATH}
    - sed -i "s,<<master>>,master,g" ${MANIFEST_PATH}
    - sed -i "s,<<current>>,origin/$CI_COMMIT_REF_NAME,g" ${MANIFEST_PATH}

    - flatpak-builder --bundle-sources --repo=devel build ${MANIFEST_PATH}
    - flatpak build-bundle devel ${BUNDLE} --runtime-repo=${RUNTIME_REPO} ${APPID}

  environment:
    name: review/$CI_COMMIT_REF_NAME
    url: https://gitlab.gnome.org/$CI_PROJECT_PATH/-/jobs/$CI_JOB_ID/artifacts/raw/${BUNDLE}
  when: always
