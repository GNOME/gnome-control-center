using Gtk 4.0;
using Adw 1;

template $CcDisplaySettings: Adw.PreferencesPage {
  Adw.PreferencesGroup {
    Adw.ComboRow use_as_row {
      title: _("Use As");

      model: StringList {
        strings [
          _("Primary Display"),
          _("Secondary Display"),
          _("Disable"),
        ]
      };

      notify::selected => $on_use_as_selected_item_changed_cb(template);
    }
  }

  Adw.PreferencesGroup {
    Adw.ComboRow orientation_row {
      width-request: 100;
      title: C_("display setting", "_Orientation");
      use-underline: true;
      notify::selected-item => $on_orientation_selection_changed_cb();
    }

    Adw.ComboRow resolution_row {
      width-request: 100;
      title: C_("display setting", "_Resolution");
      use-underline: true;
      notify::selected-item => $on_resolution_selection_changed_cb();
    }

    Adw.ComboRow refresh_rate_row {
      width-request: 100;
      title: _("R_efresh Rate");
      use-underline: true;
      notify::selected-item => $on_refresh_rate_selection_changed_cb();
    }

    Adw.ExpanderRow refresh_rate_expander_row {
      width-request: 100;
      title: _("R_efresh Rate");
      use-underline: true;

      [suffix]
      Label refresh_rate_expander_suffix_label {}

      Adw.SwitchRow variable_refresh_rate_row {
        width-request: 100;
        title: _("_Variable Refresh Rate");
        use-underline: true;
        notify::active => $on_variable_refresh_rate_active_changed_cb();
      }

      Adw.ComboRow preferred_refresh_rate_row {
        width-request: 100;
        title: _("Re_fresh Rate");
        use-underline: true;
        selected: bind refresh_rate_row.selected no-sync-create bidirectional;
      }
    }

    Adw.SwitchRow hdr_row {
      width-request: 100;
      title: _("_HDR (High Dynamic Range)");
      use-underline: true;
      notify::active => $on_hdr_row_active_changed_cb();
    }

    Adw.SwitchRow underscanning_row {
      width-request: 100;
      title: _("Adjust for _TV");
      use-underline: true;
      notify::active => $on_underscanning_row_active_changed_cb();
    }

    Adw.ActionRow scale_buttons_row {
      width-request: 100;
      title: C_("display setting", "_Scale");
      use-underline: true;

      Adw.ToggleGroup scale_toggle_group {
        valign: center;
        homogeneous: true;
        notify::active => $on_scale_btn_active_changed_cb(template);
      }
    }

    Adw.ComboRow scale_combo_row {
      width-request: 100;
      title: C_("display setting", "_Scale");
      use-underline: true;
      notify::selected-item => $on_scale_selection_changed_cb();
    }
  }
}
