using Gtk 4.0;
using Adw 1;

template $CcDisplayPanel: $CcPanel {
  ShortcutController {
    scope: managed;
    name: "Display Panel Globals Shortcuts";

    Shortcut escape_shortcut {
      trigger: "Escape";
    }
  }

  [subpage]
  Adw.NavigationPage {
    title: _("Displays");

    child: Adw.ToolbarView {
      [top]
      Adw.HeaderBar {
        title-widget: Adw.ViewSwitcher {
          stack: stack;
          policy: wide;
        };
      }

      [bottom]
      Box {
        visible: bind template.showing-apply-titlebar;
        halign: center;
        homogeneous: true;

        styles [
          "toolbar",
        ]

        Button cancel_button {
          use-underline: true;
          label: _("_Cancel");
          can-shrink: true;
          clicked => $cancel_current_configuration(template);
        }

        Button apply_button {
          use-underline: true;
          label: _("_Apply Changes");
          can-shrink: true;
          clicked => $apply_current_configuration(template);

          styles [
            "suggested-action",
          ]
        }
      }

      content: Adw.ToastOverlay toast_overlay {
        Adw.ViewStack stack {
          Adw.ViewStackPage {
            title: _("Displays");
            icon-name: "video-display-symbolic";

            child: Adw.PreferencesPage {
              Adw.PreferencesGroup display_settings_disabled_group {
                visible: false;

                Adw.StatusPage {
                  vexpand: true;
                  icon-name: "computer-symbolic";
                  title: _("Display Settings Disabled");
                }
              }

              Adw.PreferencesGroup display_multiple_displays {
                Adw.ActionRow config_type_switcher_row {
                  title: _("Multiple Displays");

                  [suffix]
                  Adw.ToggleGroup display_config_type {
                    valign: center;
                    homogeneous: true;
                    notify::active => $on_config_type_toggled_cb(template);

                    Adw.Toggle {
                      name: "join";

                      /* Translators: 'Join' as in 'Join displays' */
                      label: _("_Join");
                      use-underline: true;
                    }

                    Adw.Toggle {
                      name: "clone";
                      label: _("_Mirror");
                      use-underline: true;
                    }
                  }
                }

                $CcListRow arrangement_row {
                  show-arrow: "True";
                  title: _("Arrange Displays");
                  activated => $adw_dialog_present(display_arrangement_dialog);
                }
              }

              Adw.PreferencesGroup display_settings_group {
                Adw.ComboRow primary_display_row {
                  subtitle: _("Contains top bar and Activities");
                  title: _("_Primary Display");
                  use-underline: true;
                  notify::selected-item => $on_primary_display_selected_item_changed_cb();
                }
              }

              Adw.PreferencesGroup single_display_settings_group {
                visible: false;
              }
            };
          }

          Adw.ViewStackPage {
            title: _("Night Light");
            icon-name: "night-light-symbolic";

            child: Adw.ToolbarView {
              content: $CcNightLightPage night_light_page {};
            };
          }
        }
      };
    };
  }

  [subpage]
  Adw.NavigationPage display_settings_page {
    tag: "display-settings";

    child: Adw.ToolbarView {
      [top]
      Adw.HeaderBar {}

      [bottom]
      Box {
        visible: bind template.showing-apply-titlebar;
        halign: center;
        homogeneous: true;

        styles [
          "toolbar",
        ]

        Button {
          use-underline: true;
          label: bind cancel_button.label;
          can-shrink: true;
          clicked => $cancel_current_configuration(template);
        }

        Button {
          use-underline: true;
          label: bind apply_button.label;
          can-shrink: true;
          clicked => $apply_current_configuration(template);
          sensitive: bind apply_button.sensitive;

          styles [
            "suggested-action",
          ]
        }
      }

      content: Adw.ToastOverlay display_settings_page_toast_overlay {
        Adw.PreferencesPage {
          Adw.PreferencesGroup {
            Adw.Bin display_settings_bin {}
          }
        }
      };
    };
  }
}

Adw.Dialog display_arrangement_dialog {
  title: _("Arrange Displays");
  content-width: 400;
  can-close: false;
  close-attempt => $on_display_arrangement_dialog_close_attempt_cb(template);

  child: Adw.ToolbarView {
    [top]
    Adw.HeaderBar {}

    content: Adw.PreferencesPage {
      description: _("Drag displays so they match the physical layout");

      Adw.PreferencesGroup arrangement_group {
        styles [
          "view",
        ]
      }
    };
  };
}
